# $FrauBSD: TODO-FRAUBSD 2016-01-16 09:00:45 -0800 freebsdfrau $

++ Top priorities for FrauBSD project ++

Focal points for freebsdfrau:
- Grow multiply, add, and subtract in bsdconfig `float.subr'
- Integrate CFLAGS for buildworld (see README-FRAUBSD)
- Rewrite bsdinstall (usr.sbin/bsdinstall2)
- Bring in derivative kernel config (SYNAPSE)
- Add pident tool (wrapper to print ident(1) summary for directories)
- Stage syslinux-6.03 for release process
- Stage isohybrid.pl for release process
- Bring back mfsroot
- Merge 32-bit and 64-bit architectures together into single installer
- Import htt (x86 ASM in a C utility to probe HyperThreading support)
- Import x86_64 (x86 ASM in a C utility to probe [HAMMER] CPU Longmode)
- Import rescue_mfsroot
- Import WriteImage.applescript
- Import iso2 tools
- Import pxe-config and add support for FrauBSD install media layout
- Generate anyboot mfsroot image, universal installer shim
- Import host_rebuild as a replacement for freebsd-update
- Generate rebuild_crunch release infrastructure
- Import pkgbase and finish MANIFEST API
- Import beadm
- Create configure script for release process
- Create preflight script for developer commit setup
- Write fsb_release and introduce /etc/freebsd_version
- Develop versioning scheme
- Complete interim works (unfurl, bsdconfig wireless)
- Start staging releases
- Continue development of imported works (sysconf)
- Start development on libcmb(3) + cmb(1)
- Create shstyle(9) manual
- Start integration with zenity
- bsdconfig x11 to focus on X11 configuration and xrandr features
- Desktop offering with choice of window manager
  NOTE: Offerings expected to be tvtwm, fvwm2, gnome, lxde, mate/wm2,
  and additional offerings to include blackbox, fluxbox, flwm, icewm,
  jewel, jwm, openbox, oroborus, pekwm, phluid, piewm, pwm, sapphire,
  sawfish, swm, twm, w9wm, windowlab, and xfwm4. With a mechanism for
  choosing your window manager after login authentication.

Focal points that need attention (will come faster with recruiting):
- Project artwork, including mascot design
  NOTE: I can handle the conversion to boot loader screen(s)
- Website portal (hosting and SSL are taken care of already)
- Jenkins CI and release distribution
- Testing integration with FreeBSD ports and packages (via pkg)
- Merge scheduling and automation (pulling from freebsd/master)

